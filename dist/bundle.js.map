{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///external \"React\"","webpack:///./node_modules/trc-httpshim/xclient.js","webpack:///./src/index.tsx","webpack:///external \"ReactDOM\"","webpack:///./src/components/ColumnSelector.tsx","webpack:///./src/components/SheetContainer.tsx","webpack:///./node_modules/trc-httpshim/httpshim-browser.js","webpack:///./node_modules/trc-httpshim/common.js","webpack:///./node_modules/trc-sheet/sheet.js","webpack:///./node_modules/trc-core/core.js","webpack:///./node_modules/trc-sheet/sheetContents.js","webpack:///./node_modules/trc-analyze/collections.js"],"names":["installedModules","__webpack_require__","moduleId","exports","module","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","prototype","hasOwnProperty","p","s","React","http","HttpClientFactory","startsWith","str","word","lastIndexOf","NewHttpClient","url","host","substr","HttpClient","UrlBuilder","path","_this","this","toString","_url","addQuery","undefined","del","q","indexOf","encodeURIComponent","XClient","New","endpoint","authToken","gpsProvider","httpClient","x","_authToken","_httpClient","_gpsProvider","getAsync","relativePath","sendAsync","deleteAsync","putAsync","body","postAsync","patchAsync","method","Promise","resolve","reject","geo","getLoc","ReactDOM","ColumnSelector_1","SheetContainer_1","bcl","SheetName","Component","[object Object]","createElement","_trcGlobal","_info","Name","App","props","super","state","columnInfo","shardValues","renderBody","handle","y","Topology","AutoCreateChildrenForColumnName","ci","vals","_contents","counter","HashCount","map","Add","setState","getKeys","alert","window","mainMajor","beginLoad","setTimeout","check","ColumnSelector","Include","IsReadOnly","Value","OnChange","e","setOption","length","idx","onClick","disabled","getTopology","renderInput","renderTopology","SheetContainer","onReady","fetchContents","render","document","getElementById","handleChange","Columns","cs","getValues","event","target","onChange","getValue","XC","trcSheet","_updating","SheetId","sheetRef","Server","AuthToken","sheetClient","SheetClient","getSheetContentsAsync","then","contents","checkDone","getInfoAsync","info","common","protocol","hostName","_protocol","_hostname","verb","authHeader","onSuccess","onFailure","$","ajax","type","contentType","beforeSend","xhr","setRequestHeader","Lat","Long","data","JSON","stringify","success","textStatus","status","loc","getResponseHeader","error","statusText","errorThrown","obj","responseJSON","Message","code","msg","makeError","MockGpsTracker","_geo","setLocation","message","Code","InternalDetails","CorrelationId","core","sheetContents_1","Validators","ValidateColumnName","_columnNameRegex","test","ValidateHelper","columnName","description","possibleValues","k","item","ValidateColumnInfo","Description","PossibleValues","Expression","Semantic","ValidateAddColumn","payload","ColumnName","RegExp","PolygonKind","NextLinkEnumerable","firstSegment","_firstSegment","_http","ForEach","handler","worker","de","results","Results","NextLink","segment","catch","sheetId","_sheetId","getId","getSheetById","idChild","getUrlBase","whereExpression","selectColumns","version","join","getRecIdsAsync","ColumnNames","RecId","postUpdateSingleRowAsync","recId","columnNames","newValues","SheetContents","FromRow","postUpdateAsync","postUpdateSingleCellAsync","newValue","FromSingleCell","values","getDeltaRangeAsync","startVersion","endVersion","uri","getDeltaAsync","findVersionAsync","timestamp","toISOString","result","VersionNumber","getRebaseLogAsync","getChildrenAsync","ChildrenIds","createChildSheet","Id","createChildSheetFromFilterAsync","sharesSandbox","Filter","WhereExpression","RecIds","ShareSandbox","deleteChildSheetAsync","childSheetId","postCustomDataAsync","kind","dataId","getCustomDataAsync","deleteCustomDataAsync","listCustomDataAsync","list","ArrayEnumerable","Entries","SheetAdminClient","_client","postNewExpressionAsync","expression","getOpStatusAsync","postOpAsync","Kind","Cookie","Payload","postOpRefreshAsync","postOpCreateOrUpdateColumnsAsync","columns","Infos","forEach","postOpAddQuestionAsync","questions","postOpDeleteQuestionAsync","WaitAsync","waitHelper","CurrentOp","err","items","_items","UserClient","getUserInfoAsync","userId","getActivityFeedAsync","FirstName","LastName","Party","Address","City","Zip","XVoted","XTargetPri","PrecinctName","Cellphone","HHID","XUser","XApp","XLat","XLong","XLastModified","XIPAddress","SheetContentsIndex","source","_map","_source","cRecId","lookupRecId","set","getContents","getSheetContentsIndex","toCsv","colKeys","keys","grid","rowCount","index","push","row","_i","colKeys_1","val","direct","replace","content","arr","callback","colRecId","column","KeepRows","fpInclude","len","iRow","TakeN","sheet","topN","sheet2","slice","AddTimestamp","gps","curTime","Date","vs","Append","newColumns","numRows","extendStatics","__extends","setPrototypeOf","__proto__","Array","b","__","constructor","GeoHelper","parse","lat","long","parseFloat","getDistanceFromLatLonInKm","pt1","pt2","lat1","lon1","lat2","lon2","dLat","deg2rad","dLon","a","Math","sin","cos","atan2","sqrt","deg","PI","KeyParser","pairs","split","pair","halves","toLowerCase","Range","start","end","_start","_end","clone","expandToInclude","time","asRange","getStart","getEnd","asT","isInRangeInclusive","TimeRange","_super","apply","arguments","getDurationSecondsPretty","NewEmpty","getDurationSeconds","valueOf","prettyPrintSeconds","delta","min","hou","sec","days","floor","roundToDay","date","round","getTime","forEachDay","ms","tomorrow","Counter","_count","_total","getPercentage","add","include","getCount","getTotal","GetPercentage","top","bottom","_dict","Dict2d","_data","Dict","_key1s","_key2s","key1","key2","Key","getKey1s","getKey2s","toRect","name0","col0","k2","k1","col","remove"],"mappings":"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","file":"bundle.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 2);\n","module.exports = React;","\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nvar http = require(\"./httpshim\");\r\nvar HttpClientFactory = (function () {\r\n    function HttpClientFactory() {\r\n    }\r\n    HttpClientFactory.startsWith = function (str, word) {\r\n        return str.lastIndexOf(word, 0) === 0;\r\n    };\r\n    HttpClientFactory.NewHttpClient = function (url) {\r\n        if (HttpClientFactory.startsWith(url, \"https://\")) {\r\n            var host = url.substr(8);\r\n            return new http.HttpClient(\"https\", host);\r\n        }\r\n        if (HttpClientFactory.startsWith(url, \"http://\")) {\r\n            var host = url.substr(7);\r\n            return new http.HttpClient(\"http\", host);\r\n        }\r\n        throw \"Invalid url protocol: \" + url;\r\n    };\r\n    return HttpClientFactory;\r\n}());\r\nvar UrlBuilder = (function () {\r\n    function UrlBuilder(path) {\r\n        var _this = this;\r\n        this.toString = function () { return _this._url; };\r\n        this._url = path;\r\n    }\r\n    UrlBuilder.prototype.addQuery = function (key, value) {\r\n        if (value == null || value == undefined) {\r\n            return;\r\n        }\r\n        var q = this._url;\r\n        var del;\r\n        if (q.indexOf(\"?\") == -1) {\r\n            del = \"?\";\r\n        }\r\n        else {\r\n            del = \"&\";\r\n        }\r\n        this._url = q + del + key + \"=\" + encodeURIComponent(value.toString());\r\n    };\r\n    return UrlBuilder;\r\n}());\r\nexports.UrlBuilder = UrlBuilder;\r\nvar XClient = (function () {\r\n    function XClient() {\r\n    }\r\n    XClient.New = function (endpoint, authToken, gpsProvider) {\r\n        var httpClient = HttpClientFactory.NewHttpClient(endpoint);\r\n        var x = new XClient();\r\n        x._authToken = authToken;\r\n        x._httpClient = httpClient;\r\n        if (gpsProvider == undefined) {\r\n            gpsProvider = null;\r\n        }\r\n        x._gpsProvider = gpsProvider;\r\n        return x;\r\n    };\r\n    XClient.prototype.getAsync = function (relativePath) {\r\n        return this.sendAsync(\"GET\", relativePath);\r\n    };\r\n    XClient.prototype.deleteAsync = function (relativePath) {\r\n        return this.sendAsync(\"DELETE\", relativePath);\r\n    };\r\n    XClient.prototype.putAsync = function (relativePath, body) {\r\n        return this.sendAsync(\"PUT\", relativePath, body);\r\n    };\r\n    XClient.prototype.postAsync = function (relativePath, body) {\r\n        return this.sendAsync(\"POST\", relativePath, body);\r\n    };\r\n    XClient.prototype.patchAsync = function (relativePath, body) {\r\n        return this.sendAsync(\"POST\", relativePath, body);\r\n    };\r\n    XClient.prototype.sendAsync = function (method, relativePath, body) {\r\n        var _this = this;\r\n        if (body === void 0) { body = null; }\r\n        var url = relativePath.toString();\r\n        return new Promise(function (resolve, reject) {\r\n            var geo = null;\r\n            if (_this._gpsProvider != null) {\r\n                geo = _this._gpsProvider.getLoc();\r\n            }\r\n            _this._httpClient.sendAsync(method, url, body, \"Bearer \" + _this._authToken, geo, resolve, reject);\r\n        });\r\n    };\r\n    return XClient;\r\n}());\r\nexports.XClient = XClient;\r\n","import * as React from \"react\";\r\nimport * as ReactDOM from \"react-dom\";\r\n\r\nimport { Hello } from \"./components/Hello\";\r\n\r\nimport * as XC from 'trc-httpshim/xclient'\r\nimport * as common from 'trc-httpshim/common'\r\nimport * as core from 'trc-core/core'\r\nimport * as trcSheet from 'trc-sheet/sheet'\r\nimport { checkPropTypes } from \"prop-types\";\r\n\r\n\r\nimport { ColumnSelector } from \"./components/ColumnSelector\";\r\nimport { SheetContainer, IMajorState } from './components/SheetContainer'\r\n\r\nimport * as bcl from  'trc-analyze/collections'\r\n\r\ndeclare var _trcGlobal : IMajorState;\r\n\r\n\r\n// Display the current sheet name \r\nexport class SheetName extends React.Component<{}, {}> {\r\n    render() {        \r\n            return <div>Major: {_trcGlobal._info.Name}</div>            \r\n    }\r\n}\r\n\r\n// \r\nexport class App extends React.Component<{},{\r\n    columnInfo : trcSheet.IColumnInfo,\r\n    shardValues : string[]\r\n}>\r\n{\r\n    public constructor(props : any) {\r\n        super(props);\r\n\r\n        this.state = { columnInfo : undefined, shardValues : [] };\r\n        this.renderBody = this.renderBody.bind(this);\r\n        this.handle = this.handle.bind(this);\r\n    }\r\n    // undefined in no topology \r\n    private getTopology() : string {\r\n        var x : any = _trcGlobal._info;\r\n        var y = x.Topology;\r\n        if (!y) { return undefined; }\r\n        return y.AutoCreateChildrenForColumnName;\r\n    }\r\n\r\n    private setOption(ci : trcSheet.IColumnInfo) : void {\r\n        // Get # of uniques \r\n        var vals = _trcGlobal._contents[ci.Name];\r\n        var counter = new bcl.HashCount();\r\n        vals.map(x => counter.Add(x));\r\n                \r\n\r\n        this.setState(\r\n            {\r\n                shardValues : counter.getKeys(),\r\n                columnInfo:  ci\r\n            }\r\n        );\r\n    }\r\n    private handle() {\r\n        alert(\"Activate: \" + this.state.columnInfo.Name);\r\n\r\n        // Call Long running op\r\n        // Disable for running\r\n\r\n        var x: any = window;\r\n        x.mainMajor.beginLoad();\r\n\r\n        setTimeout( ()=> {\r\n            x.mainMajor.check();\r\n        }, 3000);\r\n\r\n        /*\r\n        var adminClient = new trcSheet.SheetAdminClient(_trcGlobal.SheetClient);\r\n        adminClient.postOpRefreshAsync().then( ()=> {\r\n            // 202 polling finished. Sheet is updated. \r\n        });*/\r\n\r\n    }\r\n\r\n    // Tips on conditional rendering: https://reactjs.org/docs/conditional-rendering.html\r\n\r\n    renderTopology() {\r\n        return <div>\r\n            This sheet does not have a current topology. Please select a column to split by:\r\n<ColumnSelector  \r\n    Include={ (ci) => ci.IsReadOnly && ci.Name != \"RecId\" }\r\n    Value={this.state.columnInfo}\r\n    OnChange={(e) => this.setOption(e)} />\r\n\r\n            { this.state.shardValues.length > 0 && \r\n            <div>This field has <b>{this.state.shardValues.length}</b> unique values: \r\n            <ul>\r\n                {this.state.shardValues.map((x,idx) => <li key={idx}>{x}</li>)}\r\n            </ul>\r\n            </div>\r\n             }\r\n\r\n            <button onClick={this.handle} disabled={!this.state.columnInfo}>Set Toplogy</button>\r\n        </div>\r\n    }\r\n    renderInput() {\r\n        return <div>\r\n            This sheet's current topology is to split by <b>{this.getTopology()}</b>.\r\n        </div> \r\n    }\r\n\r\n    // Called when the sheet has loaded. \r\n    renderBody() {\r\n        return  <div> The current sheet is: <SheetName />\r\n        { this.getTopology() ? this.renderInput() : this.renderTopology() }    </div>\r\n    }\r\n\r\n\r\n    render() {\r\n        return <div>\r\n            <p>This plugin helps with topology.</p>\r\n            <SheetContainer onReady={this.renderBody} fetchContents={true}></SheetContainer>\r\n        </div> \r\n\r\n    };\r\n}\r\n\r\nReactDOM.render(\r\n    <div>\r\n        <App></App>\r\n    </div>,\r\n    document.getElementById(\"example\")\r\n);","module.exports = ReactDOM;","import * as React from \"react\";\r\nimport * as ReactDOM from \"react-dom\";\r\nimport * as trcSheet from 'trc-sheet/sheet'\r\n\r\n// $$$ Share this with main \r\nexport interface IMajorState {\r\n    //AuthToken: string;\r\n    SheetClient: trcSheet.SheetClient;\r\n    SheetId: string;\r\n\r\n    _info: trcSheet.ISheetInfoResult;\r\n    // Sheet Contents?  Sheet History? \r\n}\r\ndeclare var _trcGlobal : IMajorState;\r\n\r\n\r\n// Select a column name from the sheet. \r\nexport interface IColumnSelectorProps {\r\n    // Optional predicate to restrict which columns are included\r\n    Include? : (ci : trcSheet.IColumnInfo) => boolean; \r\n    Value? : string | trcSheet.IColumnInfo; // Initial value \r\n\r\n    OnChange : (ci : trcSheet.IColumnInfo) => void; // Called when a selection is made\r\n}\r\nexport class ColumnSelector extends React.Component<IColumnSelectorProps, {}> {\r\n    constructor(props : any) {\r\n        if (!props.Include ) {\r\n            props.Include= (ci : any) => true;\r\n        }\r\n        super(props);\r\n        this.state = { };    \r\n        this.handleChange = this.handleChange.bind(this);\r\n      }\r\n\r\n    private getValues() : string[] {\r\n        var cs = _trcGlobal._info.Columns;\r\n        return cs.map(c => this.props.Include(c) ? c.Name : null);\r\n    }\r\n\r\n    \r\n    // Used for selecting the \"props.Value\" item. \r\n    // value is an index into columnInfo array\r\n    private getValue() : number {\r\n        if (!this.props.Value) {\r\n            return undefined;\r\n        }\r\n\r\n        // props may be the name or the columnInfo. Convert to name\r\n        var x : any= this.props.Value;\r\n        var name : string = (x.Name) ? x.Name : x;        \r\n\r\n        var cs = this.getValues();\r\n        for(var i  =0; i < cs.length; i++) {\r\n            var c = cs[i];\r\n            if (c) { // skip nulls \r\n                if (c == name) {\r\n                    return i;\r\n                } \r\n            }\r\n        }\r\n\r\n        return undefined;\r\n    }\r\n\r\n    handleChange(event: any) {\r\n        var idx = event.target.value;\r\n        //alert(\"set: \" + idx);\r\n        // this.setState({value: event.target.value});\r\n        var ci = _trcGlobal._info.Columns[idx];\r\n        \r\n        this.props.OnChange(ci);\r\n      }\r\n\r\n      \r\n    // Hints on <select>: https://reactjs.org/docs/forms.html#the-select-tag\r\n    render() {     \r\n        // <option> must have a 'key' property for React.    \r\n         return <select onChange={this.handleChange} value={this.getValue()}>\r\n             {this.getValues().map((name,idx) =>              \r\n             name ? \r\n             <option key={idx} value={idx}>{name}</option>\r\n             : null\r\n             )}\r\n         </select>   \r\n    }\r\n}\r\n","// Wraps accessing a Sheet's info, contents, history, etc. \r\n// Exposes sheet info  to child elements. \r\n// Provides top-level UI for notifying loading state, missing requirements, etc. \r\n// Can enforce requirements like:\r\n//  - required columns \r\n//  - Must be top-level\r\n\r\nimport * as React from \"react\";\r\nimport * as ReactDOM from \"react-dom\";\r\n\r\nimport * as XC from 'trc-httpshim/xclient'\r\nimport * as common from 'trc-httpshim/common'\r\nimport * as core from 'trc-core/core'\r\nimport * as trcSheet from 'trc-sheet/sheet'\r\nimport * as sheetContents from 'trc-sheet/sheetContents'\r\n\r\n// https://www.leighhalliday.com/introducing-react-context-api\r\n// const AppContext = React.createContext( {});\r\n\r\n// Replace this with a react context? \r\ndeclare var _trcGlobal : IMajorState;\r\n\r\n\r\nexport interface IMajorProps {         \r\n    fetchContents : boolean;\r\n    // fetchRebase, fetchHistory, etc \r\n    // requireTopLevel, requireColumn\r\n    onReady : () => any; // render body when ready \r\n}\r\nexport interface IMajorState {\r\n    //AuthToken: string;\r\n    SheetClient: trcSheet.SheetClient;\r\n    SheetId: string;\r\n\r\n    _updating? : boolean;\r\n\r\n    _info?: trcSheet.ISheetInfoResult;\r\n    _contents? : sheetContents.ISheetContents\r\n    // Sheet Contents?  Sheet History? \r\n}\r\n\r\nexport class SheetContainer extends React.Component<IMajorProps, IMajorState> {\r\n\r\n    public constructor(props: any) {\r\n        super(props);\r\n\r\n        // Ordering:\r\n        // - DOM has an html element \r\n        // - <SheetContainer> is rendered to that element. This sets the global\r\n        // - Load complete.\r\n        // - PluginMain() is called (after the OnLoad event). This reads the global\r\n        //     to get <SheetContainer> and call setSheetRef();\r\n        var x: any = window;\r\n        x.mainMajor = this;\r\n    }\r\n    render() {\r\n        if (!this.state) {\r\n            return <div>Loading...</div>\r\n        } else {\r\n            if (this.state._updating) {\r\n                return <div>Updating... please wait ...</div> \r\n            }\r\n            if (!this.state._info) {\r\n                return <div>Major! Not yet loaded: {this.state.SheetId}</div>;\r\n            } else {\r\n                // return <div>Major: {this.state._info.Name}</div>\r\n                //return this.props.children;\r\n                return this.props.onReady();\r\n            }\r\n        }\r\n    }\r\n\r\n    // Signal control will begin loading. \r\n    // Will disable entire frame. \r\n    public  beginLoad() : void {\r\n        this.setState({\r\n            _updating : true \r\n        });\r\n        // Will trigger a render. \r\n    }\r\n    \r\n    public check() : void {\r\n        this.setState({\r\n            _updating : false \r\n        });\r\n        /*\r\n        var adminClient = new trcSheet.SheetAdminClient(_trcGlobal.SheetClient);\r\n        adminClient.WaitAsync().then( ()=> {\r\n\r\n\r\n        }).catch( (err) => {\r\n\r\n        });*/\r\n    }\r\n    \r\n    // Called by PluginMain() once sheetId is available. \r\n    public setSheetRef(sheetRef: any): void {\r\n        var httpClient = XC.XClient.New(sheetRef.Server, sheetRef.AuthToken, undefined);\r\n        var sheetClient = new trcSheet.SheetClient(httpClient, sheetRef.SheetId);\r\n\r\n        // Make async network call...\r\n        this.setState({\r\n            SheetId: sheetRef.SheetId,\r\n            SheetClient: sheetClient\r\n        }, () => {     \r\n            _trcGlobal = { \r\n                SheetId : sheetRef.SheetId, \r\n                 SheetClient : sheetClient\r\n            };\r\n\r\n            // Possible things to get:\r\n            // - Info (small)\r\n            // - Contents \r\n            // - Deltas \r\n            // - RebaseLog\r\n            \r\n            // State is updated \r\n\r\n            if (this.props.fetchContents) {\r\n                this.state.SheetClient.getSheetContentsAsync().then( (contents)=> \r\n                {\r\n                    _trcGlobal._contents = contents;\r\n                    this.checkDone();                    \r\n                })\r\n            }\r\n            \r\n            this.state.SheetClient.getInfoAsync().then((info) => {                \r\n                _trcGlobal._info = info;               \r\n                this.checkDone();\r\n            });\r\n        });\r\n    }\r\n\r\n    private checkDone() : void {\r\n        if (!_trcGlobal) {\r\n            return;\r\n        }\r\n        if (this.props.fetchContents && !_trcGlobal._contents) {\r\n            return;\r\n        }\r\n        if (!_trcGlobal._info){\r\n            return;\r\n        }\r\n\r\n        // Done! Now update the state once with everything \r\n        this.setState({\r\n            _info: _trcGlobal._info,\r\n            _contents : _trcGlobal._contents\r\n        });        \r\n    }\r\n}","\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nvar common = require(\"./common\");\r\nvar HttpClient = (function () {\r\n    function HttpClient(protocol, hostName) {\r\n        this._protocol = protocol;\r\n        this._hostname = hostName;\r\n    }\r\n    HttpClient.prototype.sendAsync = function (verb, path, body, authHeader, geo, onSuccess, onFailure) {\r\n        var _this = this;\r\n        var url;\r\n        if (path.indexOf(\"http\") == 0) {\r\n            url = path;\r\n        }\r\n        else {\r\n            url = this._protocol + \"://\" + this._hostname + path;\r\n        }\r\n        $.ajax({\r\n            url: url,\r\n            type: verb,\r\n            contentType: \"application/json\",\r\n            beforeSend: function (xhr) {\r\n                xhr.setRequestHeader('accept', 'application/json');\r\n                if (authHeader != null) {\r\n                    xhr.setRequestHeader(\"Authorization\", authHeader);\r\n                }\r\n                if (geo != null) {\r\n                    xhr.setRequestHeader(\"x-lat\", geo.Lat);\r\n                    xhr.setRequestHeader(\"x-long\", geo.Long);\r\n                }\r\n            },\r\n            data: (body == null) ? undefined : JSON.stringify(body),\r\n            success: function (data, textStatus, xhr) {\r\n                var status = xhr.status;\r\n                if (status == 202) {\r\n                    var loc = xhr.getResponseHeader('Location');\r\n                    if (!!loc) {\r\n                        setTimeout(function () {\r\n                            _this.sendAsync(\"GET\", loc, null, authHeader, geo, onSuccess, onFailure);\r\n                        }, 5 * 1000);\r\n                        return;\r\n                    }\r\n                }\r\n                onSuccess(data);\r\n            },\r\n            error: function (xhr, statusText, errorThrown) {\r\n                var obj = xhr.responseJSON;\r\n                if (!obj || !obj.Message) {\r\n                    var code = xhr.status;\r\n                    var msg = \"(\" + statusText + \") Error \" + code + \" from \" + verb + \" \" + url;\r\n                    onFailure(common.makeError(code, msg));\r\n                }\r\n                else {\r\n                    onFailure(obj);\r\n                }\r\n            }\r\n        });\r\n    };\r\n    return HttpClient;\r\n}());\r\nexports.HttpClient = HttpClient;\r\n","\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nvar MockGpsTracker = (function () {\r\n    function MockGpsTracker() {\r\n    }\r\n    MockGpsTracker.prototype.MockGpsTracker = function () {\r\n        this._geo = { Lat: 0, Long: 0 };\r\n    };\r\n    MockGpsTracker.prototype.getLoc = function () {\r\n        return this._geo;\r\n    };\r\n    MockGpsTracker.prototype.setLocation = function (geo) {\r\n        this._geo = geo;\r\n    };\r\n    return MockGpsTracker;\r\n}());\r\nexports.MockGpsTracker = MockGpsTracker;\r\nfunction makeError(code, message) {\r\n    return {\r\n        Code: code,\r\n        Message: (message == undefined) ? null : message,\r\n        InternalDetails: null,\r\n        CorrelationId: null\r\n    };\r\n}\r\nexports.makeError = makeError;\r\n","\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nvar core = require(\"trc-core/core\");\r\nvar XC = require(\"trc-httpshim/xclient\");\r\nvar sheetContents_1 = require(\"./sheetContents\");\r\nvar Validators = (function () {\r\n    function Validators() {\r\n    }\r\n    Validators.ValidateColumnName = function (name) {\r\n        if (name == null) {\r\n            throw 'Column Name is missing';\r\n        }\r\n        if (!Validators._columnNameRegex.test(name)) {\r\n            throw 'Column Name is not valid: ' + name;\r\n        }\r\n    };\r\n    Validators.ValidateHelper = function (columnName, description, possibleValues) {\r\n        Validators.ValidateColumnName(columnName);\r\n        if (description != null) {\r\n            if (description.length > 400) {\r\n                throw \"Description is too long for '\" + columnName + \"'\";\r\n            }\r\n        }\r\n        if (possibleValues != null) {\r\n            if (possibleValues.length > 15) {\r\n                throw \"Too many possible values in question '\" + columnName + \"'\";\r\n            }\r\n            for (var k in possibleValues) {\r\n                var item = possibleValues[k];\r\n                if (!item) {\r\n                    throw \"possible values can't be null in question '\" + columnName + \"'\";\r\n                }\r\n                if (item.length > 50) {\r\n                    throw \"Possible value is too long for '\" + columnName + \"'\";\r\n                }\r\n            }\r\n        }\r\n    };\r\n    Validators.ValidateColumnInfo = function (info) {\r\n        Validators.ValidateHelper(info.Name, info.Description, info.PossibleValues);\r\n        if (!!info.Expression && !!info.Semantic) {\r\n            throw \"Can't send both Expression and Semantic properties on a column: '\" + info.Name + \"'.\";\r\n        }\r\n        if (!!info.Expression && !info.IsReadOnly) {\r\n            throw \"Expression columns must be read-only: '\" + info.Name + \"'.\";\r\n        }\r\n    };\r\n    Validators.ValidateAddColumn = function (payload) {\r\n        Validators.ValidateHelper(payload.ColumnName, payload.Description, payload.PossibleValues);\r\n    };\r\n    Validators._columnNameRegex = new RegExp(\"^[a-zA-Z0-9_]+$\");\r\n    return Validators;\r\n}());\r\nexports.Validators = Validators;\r\nexports.PolygonKind = \"_polygon\";\r\nvar NextLinkEnumerable = (function () {\r\n    function NextLinkEnumerable(firstSegment, http) {\r\n        this._firstSegment = firstSegment;\r\n        this._http = http;\r\n    }\r\n    NextLinkEnumerable.prototype.ForEach = function (handler) {\r\n        var _this = this;\r\n        return new Promise(function (resolve, reject) {\r\n            var worker = function (de) {\r\n                var results = de.Results;\r\n                if (results != null) {\r\n                    for (var i in results) {\r\n                        var item = results[i];\r\n                        try {\r\n                            handler(item);\r\n                        }\r\n                        catch (e) {\r\n                            reject(e);\r\n                        }\r\n                    }\r\n                }\r\n                if (de.NextLink != null) {\r\n                    _this._http.getAsync(de.NextLink).then(function (segment) {\r\n                        worker(segment);\r\n                    }).catch(function (error) { return reject(error); });\r\n                }\r\n                else {\r\n                    resolve();\r\n                }\r\n            };\r\n            worker(_this._firstSegment);\r\n        });\r\n    };\r\n    return NextLinkEnumerable;\r\n}());\r\nvar SheetClient = (function () {\r\n    function SheetClient(http, sheetId) {\r\n        this._http = http;\r\n        this._sheetId = sheetId;\r\n    }\r\n    SheetClient.prototype.getId = function () {\r\n        return this._sheetId;\r\n    };\r\n    SheetClient.prototype.getSheetById = function (idChild) {\r\n        return new SheetClient(this._http, idChild);\r\n    };\r\n    SheetClient.prototype.getUrlBase = function (path) {\r\n        if (path === void 0) { path = \"\"; }\r\n        var url = new XC.UrlBuilder(\"/sheets/\" + this._sheetId + path);\r\n        return url;\r\n    };\r\n    SheetClient.prototype.getInfoAsync = function () {\r\n        var url = this.getUrlBase(\"/info\");\r\n        return this._http.getAsync(url);\r\n    };\r\n    SheetClient.prototype.getSheetContentsAsync = function (whereExpression, selectColumns, version) {\r\n        var url = this.getUrlBase();\r\n        url.addQuery(\"filter\", whereExpression);\r\n        if (selectColumns != null && selectColumns != undefined) {\r\n            url.addQuery(\"select\", selectColumns.join());\r\n        }\r\n        url.addQuery(\"version\", version);\r\n        return this._http.getAsync(url);\r\n    };\r\n    SheetClient.prototype.getRecIdsAsync = function () {\r\n        var selectColumns = [sheetContents_1.ColumnNames.RecId];\r\n        return this.getSheetContentsAsync(null, selectColumns).then(function (contents) {\r\n            return contents[sheetContents_1.ColumnNames.RecId];\r\n        });\r\n    };\r\n    SheetClient.prototype.postUpdateSingleRowAsync = function (recId, columnNames, newValues) {\r\n        var body = sheetContents_1.SheetContents.FromRow(recId, columnNames, newValues);\r\n        return this.postUpdateAsync(body);\r\n    };\r\n    SheetClient.prototype.postUpdateSingleCellAsync = function (recId, columnName, newValue) {\r\n        var body = sheetContents_1.SheetContents.FromSingleCell(recId, columnName, newValue);\r\n        return this.postUpdateAsync(body);\r\n    };\r\n    SheetClient.prototype.postUpdateAsync = function (values) {\r\n        var url = this.getUrlBase();\r\n        return this._http.sendAsync(\"POST\", url, values);\r\n    };\r\n    SheetClient.prototype.getDeltaRangeAsync = function (startVersion, endVersion) {\r\n        var _this = this;\r\n        var uri = this.getUrlBase(\"/deltas\");\r\n        uri.addQuery(\"start\", startVersion);\r\n        uri.addQuery(\"end\", endVersion);\r\n        return this._http.getAsync(uri).then(function (segment) {\r\n            return new NextLinkEnumerable(segment, _this._http);\r\n        });\r\n    };\r\n    SheetClient.prototype.getDeltaAsync = function (version) {\r\n        var uri = this.getUrlBase(\"/history/\" + version);\r\n        return this._http.getAsync(uri);\r\n    };\r\n    SheetClient.prototype.findVersionAsync = function (timestamp) {\r\n        var uri = this.getUrlBase(\"/history/find?timestamp=\" + timestamp.toISOString());\r\n        return this._http.getAsync(uri).\r\n            then(function (result) { return result.VersionNumber; });\r\n    };\r\n    SheetClient.prototype.getRebaseLogAsync = function () {\r\n        var _this = this;\r\n        var uri = this.getUrlBase(\"/history/rebase\");\r\n        return this._http.getAsync(uri).\r\n            then(function (segment) { return new NextLinkEnumerable(segment, _this._http); });\r\n    };\r\n    SheetClient.prototype.getChildrenAsync = function () {\r\n        var uri = this.getUrlBase(\"/child\");\r\n        return this._http.getAsync(uri).\r\n            then(function (result) { return result.ChildrenIds; });\r\n    };\r\n    SheetClient.prototype.createChildSheet = function (body) {\r\n        var _this = this;\r\n        var uri = this.getUrlBase(\"/child\");\r\n        return this._http.postAsync(uri, body).\r\n            then(function (result) { return _this.getSheetById(result.Id); });\r\n    };\r\n    SheetClient.prototype.createChildSheetFromFilterAsync = function (name, whereExpression, sharesSandbox) {\r\n        var body = {\r\n            Name: name,\r\n            Filter: {\r\n                WhereExpression: whereExpression\r\n            },\r\n            RecIds: null,\r\n            ShareSandbox: sharesSandbox,\r\n        };\r\n        return this.createChildSheet(body);\r\n    };\r\n    SheetClient.prototype.deleteChildSheetAsync = function (childSheetId) {\r\n        var uri = this.getUrlBase(\"/child/\" + childSheetId);\r\n        return this._http.deleteAsync(uri);\r\n    };\r\n    SheetClient.prototype.postCustomDataAsync = function (kind, dataId, body) {\r\n        var url = this.getUrlBase(\"/data/\" + kind + \"/\" + dataId);\r\n        return this._http.sendAsync(\"POST\", url, body);\r\n    };\r\n    SheetClient.prototype.getCustomDataAsync = function (kind, dataId) {\r\n        var url = this.getUrlBase(\"/data/\" + kind + \"/\" + dataId);\r\n        return this._http.getAsync(url);\r\n    };\r\n    SheetClient.prototype.deleteCustomDataAsync = function (kind, dataId) {\r\n        var url = this.getUrlBase(\"/data/\" + kind + \"/\" + dataId);\r\n        return this._http.deleteAsync(url);\r\n    };\r\n    SheetClient.prototype.listCustomDataAsync = function (kind) {\r\n        var url = this.getUrlBase(\"/data/\" + kind);\r\n        return this._http.getAsync(url).then(function (list) {\r\n            return new core.ArrayEnumerable(list.Entries);\r\n        });\r\n    };\r\n    return SheetClient;\r\n}());\r\nexports.SheetClient = SheetClient;\r\nvar SheetAdminClient = (function () {\r\n    function SheetAdminClient(sheetClient) {\r\n        this._client = sheetClient;\r\n    }\r\n    SheetAdminClient.prototype.postNewExpressionAsync = function (name, expression) {\r\n        try {\r\n            Validators.ValidateColumnName(name);\r\n            var body = {\r\n                Name: name,\r\n                IsReadOnly: true,\r\n                Expression: expression\r\n            };\r\n            var uri = this._client.getUrlBase(\"/columns/\" + name);\r\n            return this._client._http.postAsync(uri, body);\r\n        }\r\n        catch (error) {\r\n            return Promise.reject(error);\r\n        }\r\n    };\r\n    SheetAdminClient.prototype.getOpStatusAsync = function () {\r\n        var uri = this._client.getUrlBase(\"/ops\");\r\n        return this._client._http.getAsync(uri);\r\n    };\r\n    SheetAdminClient.prototype.postOpAsync = function (kind, payload) {\r\n        var body = {\r\n            SheetId: this._client._sheetId,\r\n            Kind: kind,\r\n            Cookie: null,\r\n            Payload: payload\r\n        };\r\n        var uri = this._client.getUrlBase(\"/ops\");\r\n        return this._client._http.putAsync(uri, body);\r\n    };\r\n    SheetAdminClient.prototype.postOpRefreshAsync = function () {\r\n        var payload = {};\r\n        return this.postOpAsync(\"RefreshContents\", payload);\r\n    };\r\n    SheetAdminClient.prototype.postOpCreateOrUpdateColumnsAsync = function (columns) {\r\n        var payload = {\r\n            Infos: columns\r\n        };\r\n        try {\r\n            columns.forEach(function (item) { return Validators.ValidateColumnInfo(item); });\r\n        }\r\n        catch (error) {\r\n            return Promise.reject(error);\r\n        }\r\n        return this.postOpAsync(\"AddColumns\", payload);\r\n    };\r\n    SheetAdminClient.prototype.postOpAddQuestionAsync = function (questions) {\r\n        var payload = {\r\n            Columns: questions\r\n        };\r\n        try {\r\n            for (var i in questions) {\r\n                var item = questions[i];\r\n                Validators.ValidateAddColumn(item);\r\n            }\r\n        }\r\n        catch (error) {\r\n            return Promise.reject(error);\r\n        }\r\n        return this.postOpAsync(\"AddColumns\", payload);\r\n    };\r\n    SheetAdminClient.prototype.postOpDeleteQuestionAsync = function (columnName) {\r\n        var payload = {\r\n            ColumnName: columnName\r\n        };\r\n        return this.postOpAsync(\"DeleteColumn\", payload);\r\n    };\r\n    SheetAdminClient.prototype.WaitAsync = function () {\r\n        var _this = this;\r\n        return new Promise(function (resolve, reject) {\r\n            _this.waitHelper(resolve, reject);\r\n        });\r\n    };\r\n    SheetAdminClient.prototype.waitHelper = function (resolve, reject) {\r\n        var _this = this;\r\n        this.getOpStatusAsync().then(function (value) {\r\n            if (value.CurrentOp == null) {\r\n                resolve();\r\n                return;\r\n            }\r\n            setTimeout(function () {\r\n                _this.waitHelper(resolve, reject);\r\n            }, 5 * 1000);\r\n        }).catch(function (err) { return reject(err); });\r\n    };\r\n    return SheetAdminClient;\r\n}());\r\nexports.SheetAdminClient = SheetAdminClient;\r\n","\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nvar ArrayEnumerable = (function () {\r\n    function ArrayEnumerable(items) {\r\n        this._items = items;\r\n    }\r\n    ArrayEnumerable.prototype.ForEach = function (handler) {\r\n        try {\r\n            if (this._items != null) {\r\n                for (var i in this._items) {\r\n                    var item = this._items[i];\r\n                    handler(item);\r\n                }\r\n            }\r\n            return Promise.resolve();\r\n        }\r\n        catch (e) {\r\n            return Promise.reject(e);\r\n        }\r\n    };\r\n    return ArrayEnumerable;\r\n}());\r\nexports.ArrayEnumerable = ArrayEnumerable;\r\nvar UserClient = (function () {\r\n    function UserClient(http) {\r\n        this._http = http;\r\n    }\r\n    UserClient.prototype.getUserInfoAsync = function (userId) {\r\n        if (!userId) {\r\n            return this._http.getAsync(\"/me\");\r\n        }\r\n        else {\r\n            return this._http.getAsync(\"/user/\" + userId);\r\n        }\r\n    };\r\n    UserClient.prototype.getActivityFeedAsync = function () {\r\n        return this._http.getAsync(\"/me/feed/rss\");\r\n    };\r\n    return UserClient;\r\n}());\r\nexports.UserClient = UserClient;\r\n","\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nvar ColumnNames = (function () {\r\n    function ColumnNames() {\r\n    }\r\n    ColumnNames.RecId = \"RecId\";\r\n    ColumnNames.FirstName = \"FirstName\";\r\n    ColumnNames.LastName = \"LastName\";\r\n    ColumnNames.Party = \"Party\";\r\n    ColumnNames.Address = \"Address\";\r\n    ColumnNames.City = \"City\";\r\n    ColumnNames.Zip = \"Zip\";\r\n    ColumnNames.Lat = \"Lat\";\r\n    ColumnNames.Long = \"Long\";\r\n    ColumnNames.XVoted = \"XVoted\";\r\n    ColumnNames.XTargetPri = \"XTargetPri\";\r\n    ColumnNames.PrecinctName = \"PrecinctName\";\r\n    ColumnNames.Cellphone = \"Cellphone\";\r\n    ColumnNames.HHID = \"HHID\";\r\n    ColumnNames.XUser = \"XUser\";\r\n    ColumnNames.XApp = \"XApp\";\r\n    ColumnNames.XLat = \"XLat\";\r\n    ColumnNames.XLong = \"XLong\";\r\n    ColumnNames.XLastModified = \"XLastModified\";\r\n    ColumnNames.XIPAddress = \"XIPAddress\";\r\n    return ColumnNames;\r\n}());\r\nexports.ColumnNames = ColumnNames;\r\nvar SheetContentsIndex = (function () {\r\n    function SheetContentsIndex(source) {\r\n        this._map = {};\r\n        this._source = source;\r\n        var cRecId = source[\"RecId\"];\r\n        for (var i = 0; i < cRecId.length; i++) {\r\n            var recId = cRecId[i];\r\n            this._map[recId] = i;\r\n        }\r\n    }\r\n    SheetContentsIndex.prototype.lookupRecId = function (recId) {\r\n        var idx = this._map[recId];\r\n        if (idx == undefined) {\r\n            return -1;\r\n        }\r\n        return idx;\r\n    };\r\n    SheetContentsIndex.prototype.set = function (recId, columnName, newValue) {\r\n        var idx = this.lookupRecId(recId);\r\n        if (idx != -1) {\r\n            this._source[columnName][idx] = newValue;\r\n        }\r\n    };\r\n    SheetContentsIndex.prototype.getContents = function () {\r\n        return this._source;\r\n    };\r\n    return SheetContentsIndex;\r\n}());\r\nexports.SheetContentsIndex = SheetContentsIndex;\r\nvar SheetContents = (function () {\r\n    function SheetContents() {\r\n    }\r\n    SheetContents.getSheetContentsIndex = function (source) {\r\n        return new SheetContentsIndex(source);\r\n    };\r\n    SheetContents.toCsv = function (data) {\r\n        var colKeys = Object.keys(data);\r\n        var grid = [];\r\n        var rowCount = data[colKeys[0]].length;\r\n        var index = 0;\r\n        grid.push(colKeys);\r\n        while (index < rowCount) {\r\n            var row = [];\r\n            for (var _i = 0, colKeys_1 = colKeys; _i < colKeys_1.length; _i++) {\r\n                var colKey = colKeys_1[_i];\r\n                var direct = data[colKey][index];\r\n                var val;\r\n                if (direct == null || direct == undefined) {\r\n                    val = \"\";\r\n                }\r\n                else {\r\n                    val = direct.toString();\r\n                    try {\r\n                        val = val.replace(\"\\\"\", \"'\");\r\n                        if (val.indexOf(\",\") >= 0) {\r\n                            val = \"\\\"\" + val + \"\\\"\";\r\n                        }\r\n                    }\r\n                    catch (e) {\r\n                        val = \"???\";\r\n                    }\r\n                }\r\n                row.push(val);\r\n            }\r\n            grid.push(row);\r\n            index++;\r\n        }\r\n        var content = \"\";\r\n        grid.forEach(function (arr, index) {\r\n            var row = arr.join(\",\");\r\n            content += index < grid.length ? row + \"\\r\\n\" : row;\r\n        });\r\n        return content;\r\n    };\r\n    SheetContents.ForEach = function (source, callback) {\r\n        var colRecId = source[ColumnNames.RecId];\r\n        for (var columnName in source) {\r\n            var column = source[columnName];\r\n            if (column == colRecId) {\r\n                continue;\r\n            }\r\n            for (var i = 0; i < column.length; i++) {\r\n                var recId = colRecId[i];\r\n                var newValue = column[i];\r\n                callback(recId, columnName, newValue);\r\n            }\r\n        }\r\n    };\r\n    SheetContents.FromSingleCell = function (recId, columnName, newValue) {\r\n        var body = {};\r\n        body[ColumnNames.RecId] = [recId];\r\n        body[columnName] = [newValue];\r\n        return body;\r\n    };\r\n    SheetContents.FromRow = function (recId, columnNames, newValues) {\r\n        if (columnNames.length != newValues.length) {\r\n            throw \"length mismatch\";\r\n        }\r\n        var body = {};\r\n        body[ColumnNames.RecId] = [recId];\r\n        for (var i = 0; i < columnNames.length; i++) {\r\n            var columnName = columnNames[i];\r\n            var newValue = newValues[i];\r\n            body[columnName] = [newValue];\r\n        }\r\n        return body;\r\n    };\r\n    SheetContents.KeepRows = function (source, fpInclude) {\r\n        var columnNames = [];\r\n        var results = {};\r\n        var len = -1;\r\n        for (var columnName in source) {\r\n            if (len == -1) {\r\n                len = source[columnName].length;\r\n            }\r\n            columnNames.push(columnName);\r\n            results[columnName] = [];\r\n        }\r\n        for (var iRow = 0; iRow < len; iRow++) {\r\n            var keepRow = fpInclude(iRow);\r\n            if (keepRow) {\r\n                for (var x in columnNames) {\r\n                    var columnName = columnNames[x];\r\n                    var val = source[columnName][iRow];\r\n                    results[columnName].push(val);\r\n                }\r\n            }\r\n        }\r\n        return results;\r\n    };\r\n    SheetContents.TakeN = function (sheet, topN) {\r\n        var sheet2 = {};\r\n        for (var key in sheet) {\r\n            var value = sheet[key];\r\n            sheet2[key] = value.slice(0, topN);\r\n        }\r\n        return sheet2;\r\n    };\r\n    SheetContents.AddTimestamp = function (source, gps) {\r\n        if (gps === void 0) { gps = null; }\r\n        var curTime = new Date().toISOString();\r\n        var cs = [];\r\n        var vs = [];\r\n        cs.push(ColumnNames.XLastModified);\r\n        vs.push(curTime);\r\n        if (!!gps) {\r\n            var loc = gps.getLoc();\r\n            cs.push(ColumnNames.XLat);\r\n            cs.push(ColumnNames.XLong);\r\n            vs.push(loc.Lat.toString());\r\n            vs.push(loc.Long.toString());\r\n        }\r\n        return SheetContents.Append(source, cs, vs);\r\n    };\r\n    SheetContents.Append = function (source, newColumns, newValues) {\r\n        var results = {};\r\n        var numRows = -1;\r\n        for (var columnName in source) {\r\n            if (numRows == -1) {\r\n                numRows = source[columnName].length;\r\n            }\r\n            results[columnName] = [];\r\n        }\r\n        for (var i in newColumns) {\r\n            var columnName = newColumns[i];\r\n            results[columnName] = [];\r\n        }\r\n        for (var iRow = 0; iRow < numRows; iRow++) {\r\n            for (var columnName in source) {\r\n                var val = source[columnName][iRow];\r\n                results[columnName].push(val);\r\n            }\r\n            for (var i in newColumns) {\r\n                var columnName = newColumns[i];\r\n                var val = newValues[i];\r\n                results[columnName].push(val);\r\n            }\r\n        }\r\n        return results;\r\n    };\r\n    return SheetContents;\r\n}());\r\nexports.SheetContents = SheetContents;\r\n","\"use strict\";\r\nvar __extends = (this && this.__extends) || (function () {\r\n    var extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n    return function (d, b) {\r\n        extendStatics(d, b);\r\n        function __() { this.constructor = d; }\r\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n    };\r\n})();\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nvar GeoHelper = (function () {\r\n    function GeoHelper() {\r\n    }\r\n    GeoHelper.parse = function (lat, long) {\r\n        return { Lat: parseFloat(lat), Long: parseFloat(long) };\r\n    };\r\n    GeoHelper.getDistanceFromLatLonInKm = function (pt1, pt2) {\r\n        var lat1 = pt1.Lat;\r\n        var lon1 = pt1.Long;\r\n        var lat2 = pt2.Lat;\r\n        var lon2 = pt2.Long;\r\n        var R = 6371;\r\n        var dLat = GeoHelper.deg2rad(lat2 - lat1);\r\n        var dLon = GeoHelper.deg2rad(lon2 - lon1);\r\n        var a = Math.sin(dLat / 2) * Math.sin(dLat / 2) +\r\n            Math.cos(GeoHelper.deg2rad(lat1)) * Math.cos(GeoHelper.deg2rad(lat2)) *\r\n                Math.sin(dLon / 2) * Math.sin(dLon / 2);\r\n        var c = 2 * Math.atan2(Math.sqrt(a), Math.sqrt(1 - a));\r\n        var d = R * c;\r\n        return d;\r\n    };\r\n    GeoHelper.deg2rad = function (deg) {\r\n        return deg * (Math.PI / 180);\r\n    };\r\n    return GeoHelper;\r\n}());\r\nexports.GeoHelper = GeoHelper;\r\nvar KeyParser = (function () {\r\n    function KeyParser() {\r\n    }\r\n    KeyParser.parse = function (value) {\r\n        var obj = {};\r\n        var pairs = value.split(';');\r\n        for (var i in pairs) {\r\n            var pair = pairs[i];\r\n            if (pair.length > 0) {\r\n                var halves = pair.split('=');\r\n                var key = halves[0];\r\n                var val = halves[1];\r\n                obj[key.toLowerCase()] = val;\r\n            }\r\n        }\r\n        return obj;\r\n    };\r\n    return KeyParser;\r\n}());\r\nexports.KeyParser = KeyParser;\r\nvar Range = (function () {\r\n    function Range(start, end) {\r\n        this._start = start;\r\n        this._end = end;\r\n    }\r\n    Range.prototype.clone = function () {\r\n        return new Range(this._start, this._end);\r\n    };\r\n    Range.prototype.expandToInclude = function (time) {\r\n        var asRange = time;\r\n        if (asRange._start) {\r\n            this.expandToInclude(asRange.getStart());\r\n            this.expandToInclude(asRange.getEnd());\r\n            return;\r\n        }\r\n        var asT = time;\r\n        if (!this._start) {\r\n            this._start = asT;\r\n            this._end = asT;\r\n        }\r\n        if (time < this._start) {\r\n            this._start = asT;\r\n        }\r\n        if (time > this._end) {\r\n            this._end = asT;\r\n        }\r\n    };\r\n    Range.prototype.isInRangeInclusive = function (time) {\r\n        if (!this._start) {\r\n            return false;\r\n        }\r\n        return (this._start <= time) && (time <= this._end);\r\n    };\r\n    Range.prototype.getStart = function () { return this._start; };\r\n    Range.prototype.getEnd = function () { return this._end; };\r\n    return Range;\r\n}());\r\nexports.Range = Range;\r\nvar TimeRange = (function (_super) {\r\n    __extends(TimeRange, _super);\r\n    function TimeRange() {\r\n        var _this = _super !== null && _super.apply(this, arguments) || this;\r\n        _this.toString = function () {\r\n            if (!_this._start) {\r\n                return \"empty\";\r\n            }\r\n            return \"\" + _this._start.toISOString() + \" ... \" +\r\n                _this._end.toISOString() + \" (\" + _this.getDurationSecondsPretty() + \")\";\r\n        };\r\n        return _this;\r\n    }\r\n    TimeRange.NewEmpty = function () {\r\n        return new TimeRange(undefined, undefined);\r\n    };\r\n    TimeRange.prototype.clone = function () {\r\n        return new TimeRange(this._start, this._end);\r\n    };\r\n    TimeRange.prototype.getDurationSeconds = function () {\r\n        if (!this._start) {\r\n            return 0;\r\n        }\r\n        var diffMS = this._end.valueOf() - this._start.valueOf();\r\n        return diffMS / 1000;\r\n    };\r\n    TimeRange.prototype.getDurationSecondsPretty = function () {\r\n        return TimeRange.prettyPrintSeconds(this.getDurationSeconds());\r\n    };\r\n    TimeRange.prettyPrintSeconds = function (delta) {\r\n        var ps, pm, ph, pd, min, hou, sec, days;\r\n        delta = Math.floor(delta);\r\n        if (delta <= 59) {\r\n            ps = (delta > 1) ? \"s\" : \"\";\r\n            return delta + \" second\" + ps;\r\n        }\r\n        if (delta >= 60 && delta <= 3599) {\r\n            min = Math.floor(delta / 60);\r\n            sec = delta - (min * 60);\r\n            pm = (min > 1) ? \"s\" : \"\";\r\n            ps = (sec > 1) ? \"s\" : \"\";\r\n            return min + \" minute\" + pm + \" \" + sec + \" second\" + ps;\r\n        }\r\n        if (delta >= 3600 && delta <= 86399) {\r\n            hou = Math.floor(delta / 3600);\r\n            min = Math.floor((delta - (hou * 3600)) / 60);\r\n            ph = (hou > 1) ? \"s\" : \"\";\r\n            pm = (min > 1) ? \"s\" : \"\";\r\n            return hou + \" hour\" + ph + \" \" + min + \" minute\" + pm;\r\n        }\r\n        if (delta >= 86400) {\r\n            days = Math.floor(delta / 86400);\r\n            hou = Math.floor((delta - (days * 86400)) / 60 / 60);\r\n            pd = (days > 1) ? \"s\" : \"\";\r\n            ph = (hou > 1) ? \"s\" : \"\";\r\n            return days + \" day\" + pd + \" \" + hou + \" hour\" + ph;\r\n        }\r\n    };\r\n    TimeRange.roundToDay = function (date) {\r\n        var p = 24 * 60 * 60 * 1000;\r\n        return new Date(Math.round(date.getTime() / p) * p);\r\n    };\r\n    TimeRange.prototype.forEachDay = function (callback) {\r\n        var x = TimeRange.roundToDay(this._start);\r\n        while (x < this._end) {\r\n            var ms = x.getTime() + 86400000;\r\n            var tomorrow = new Date(ms);\r\n            callback(new TimeRange(x, tomorrow));\r\n            x = tomorrow;\r\n        }\r\n    };\r\n    return TimeRange;\r\n}(Range));\r\nexports.TimeRange = TimeRange;\r\nvar Counter = (function () {\r\n    function Counter() {\r\n        var _this = this;\r\n        this.toString = function () {\r\n            return _this._count + \" of \" + _this._total + \" (\" + _this.getPercentage() + \")\";\r\n        };\r\n        this._count = 0;\r\n        this._total = 0;\r\n    }\r\n    Counter.prototype.add = function (include) {\r\n        if (include) {\r\n            this._count++;\r\n        }\r\n        this._total++;\r\n    };\r\n    Counter.prototype.getCount = function () { return this._count; };\r\n    Counter.prototype.getTotal = function () { return this._total; };\r\n    Counter.prototype.getPercentage = function () {\r\n        return Counter.GetPercentage(this._count, this._total);\r\n    };\r\n    Counter.GetPercentage = function (top, bottom) {\r\n        if (bottom == 0) {\r\n            return \"na\";\r\n        }\r\n        return (Math.round(top * 100 * 100 / bottom) / 100).toString() + \"%\";\r\n    };\r\n    return Counter;\r\n}());\r\nexports.Counter = Counter;\r\nvar HashCount = (function () {\r\n    function HashCount() {\r\n        var _this = this;\r\n        this._dict = {};\r\n        this.toString = function () {\r\n            return _this.getCount().toString();\r\n        };\r\n    }\r\n    HashCount.prototype.Add = function (item) {\r\n        this._dict[item] = true;\r\n    };\r\n    HashCount.prototype.getCount = function () {\r\n        return Object.keys(this._dict).length;\r\n    };\r\n    HashCount.prototype.getKeys = function () {\r\n        return Object.keys(this._dict);\r\n    };\r\n    HashCount.prototype.forEach = function (callback) {\r\n        var keys = Object.keys(this._dict);\r\n        for (var i in keys) {\r\n            var value = keys[i];\r\n            callback(value);\r\n        }\r\n    };\r\n    return HashCount;\r\n}());\r\nexports.HashCount = HashCount;\r\nvar Dict2d = (function () {\r\n    function Dict2d() {\r\n        this._data = new Dict();\r\n        this._key1s = new HashCount();\r\n        this._key2s = new HashCount();\r\n    }\r\n    Dict2d.prototype.add = function (key1, key2, value) {\r\n        this._key1s.Add(key1);\r\n        this._key2s.Add(key2);\r\n        this._data.add(Dict2d.Key(key1, key2), value);\r\n    };\r\n    Dict2d.Key = function (key1, key2) {\r\n        return key1 + \"*\" + key2;\r\n    };\r\n    Dict2d.prototype.get = function (key1, key2) {\r\n        return this._data.get(Dict2d.Key(key1, key2));\r\n    };\r\n    Dict2d.prototype.getKey1s = function () {\r\n        return this._key1s.getKeys();\r\n    };\r\n    Dict2d.prototype.getKey2s = function () {\r\n        return this._key2s.getKeys();\r\n    };\r\n    Dict2d.prototype.toRect = function (name0) {\r\n        var _this = this;\r\n        var x = {};\r\n        var col0 = [];\r\n        x[name0] = col0;\r\n        this._key2s.forEach(function (k2) {\r\n            var col = [];\r\n            x[k2] = col;\r\n        });\r\n        this._key1s.forEach(function (k1) {\r\n            col0.push(k1);\r\n            _this._key2s.forEach(function (k2) {\r\n                var col = x[k2];\r\n                var val = _this.get(k1, k2);\r\n                if (!val) {\r\n                    col.push(\"\");\r\n                }\r\n                else {\r\n                    col.push(val.toString());\r\n                }\r\n            });\r\n        });\r\n        return x;\r\n    };\r\n    return Dict2d;\r\n}());\r\nexports.Dict2d = Dict2d;\r\nvar Dict = (function () {\r\n    function Dict() {\r\n        this._data = {};\r\n    }\r\n    Dict.prototype.add = function (key, value) {\r\n        this._data[key] = value;\r\n    };\r\n    Dict.prototype.get = function (key) {\r\n        return this._data[key];\r\n    };\r\n    Dict.prototype.remove = function (key) {\r\n        delete this._data[key];\r\n    };\r\n    Dict.prototype.getCount = function () {\r\n        return Object.keys(this._data).length;\r\n    };\r\n    Dict.prototype.getKeys = function () {\r\n        return Object.keys(this._data);\r\n    };\r\n    Dict.prototype.getValues = function () {\r\n        var result = [];\r\n        for (var key in this._data) {\r\n            result.push(this._data[key]);\r\n        }\r\n        return result;\r\n    };\r\n    Dict.prototype.forEach = function (callback) {\r\n        for (var key in this._data) {\r\n            var value = this._data[key];\r\n            callback(key, value);\r\n        }\r\n    };\r\n    return Dict;\r\n}());\r\nexports.Dict = Dict;\r\n"],"sourceRoot":""}