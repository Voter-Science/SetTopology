{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///external \"React\"","webpack:///./node_modules/trc-httpshim/xclient.js","webpack:///./src/index.tsx","webpack:///external \"ReactDOM\"","webpack:///./src/components/ColumnSelector.tsx","webpack:///./src/components/SheetContainer.tsx","webpack:///./node_modules/trc-httpshim/httpshim-browser.js","webpack:///./node_modules/trc-httpshim/common.js","webpack:///./node_modules/trc-sheet/sheet.js","webpack:///./node_modules/trc-core/core.js","webpack:///./node_modules/trc-sheet/sheetContents.js"],"names":["installedModules","__webpack_require__","moduleId","exports","module","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","prototype","hasOwnProperty","p","s","React","http","HttpClientFactory","startsWith","str","word","lastIndexOf","NewHttpClient","url","host","substr","HttpClient","UrlBuilder","path","_this","this","toString","_url","addQuery","undefined","del","q","indexOf","encodeURIComponent","XClient","New","endpoint","authToken","gpsProvider","httpClient","x","_authToken","_httpClient","_gpsProvider","getAsync","relativePath","sendAsync","deleteAsync","putAsync","body","postAsync","patchAsync","method","Promise","resolve","reject","geo","getLoc","ReactDOM","ColumnSelector_1","SheetContainer_1","SheetName","Component","[object Object]","createElement","_trcGlobal","_info","Name","App","props","super","state","columnInfo","renderBody","handle","y","Topology","AutoCreateChildrenForColumnName","ci","setState","alert","window","mainMajor","beginLoad","setTimeout","check","ColumnSelector","Include","IsReadOnly","OnChange","e","setOption","onClick","disabled","getTopology","renderInput","renderTopology","SheetContainer","onReady","render","document","getElementById","handleChange","Columns","map","event","idx","target","onChange","getValues","XC","trcSheet","_updating","SheetId","sheetRef","Server","AuthToken","sheetClient","SheetClient","getInfoAsync","then","info","assign","common","protocol","hostName","_protocol","_hostname","verb","authHeader","onSuccess","onFailure","$","ajax","type","contentType","beforeSend","xhr","setRequestHeader","Lat","Long","data","JSON","stringify","success","textStatus","status","loc","getResponseHeader","error","statusText","errorThrown","obj","responseJSON","Message","code","msg","makeError","MockGpsTracker","_geo","setLocation","message","Code","InternalDetails","CorrelationId","core","sheetContents_1","Validators","ValidateColumnName","_columnNameRegex","test","ValidateHelper","columnName","description","possibleValues","length","k","item","ValidateColumnInfo","Description","PossibleValues","Expression","Semantic","ValidateAddColumn","payload","ColumnName","RegExp","PolygonKind","NextLinkEnumerable","firstSegment","_firstSegment","_http","ForEach","handler","worker","de","results","Results","NextLink","segment","catch","sheetId","_sheetId","getId","getSheetById","idChild","getUrlBase","getSheetContentsAsync","whereExpression","selectColumns","version","join","getRecIdsAsync","ColumnNames","RecId","contents","postUpdateSingleRowAsync","recId","columnNames","newValues","SheetContents","FromRow","postUpdateAsync","postUpdateSingleCellAsync","newValue","FromSingleCell","values","getDeltaRangeAsync","startVersion","endVersion","uri","getDeltaAsync","findVersionAsync","timestamp","toISOString","result","VersionNumber","getRebaseLogAsync","getChildrenAsync","ChildrenIds","createChildSheet","Id","createChildSheetFromFilterAsync","sharesSandbox","Filter","WhereExpression","RecIds","ShareSandbox","deleteChildSheetAsync","childSheetId","postCustomDataAsync","kind","dataId","getCustomDataAsync","deleteCustomDataAsync","listCustomDataAsync","list","ArrayEnumerable","Entries","SheetAdminClient","_client","postNewExpressionAsync","expression","getOpStatusAsync","postOpAsync","Kind","Cookie","Payload","postOpRefreshAsync","postOpCreateOrUpdateColumnsAsync","columns","Infos","forEach","postOpAddQuestionAsync","questions","postOpDeleteQuestionAsync","WaitAsync","waitHelper","CurrentOp","err","items","_items","UserClient","getUserInfoAsync","userId","getActivityFeedAsync","FirstName","LastName","Party","Address","City","Zip","XVoted","XTargetPri","PrecinctName","Cellphone","HHID","XUser","XApp","XLat","XLong","XLastModified","XIPAddress","SheetContentsIndex","source","_map","_source","cRecId","lookupRecId","set","getContents","getSheetContentsIndex","toCsv","colKeys","keys","grid","rowCount","index","push","row","_i","colKeys_1","val","direct","replace","content","arr","callback","colRecId","column","KeepRows","fpInclude","len","iRow","TakeN","sheet","topN","sheet2","slice","AddTimestamp","gps","curTime","Date","cs","vs","Append","newColumns","numRows"],"mappings":"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","file":"bundle.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 2);\n","module.exports = React;","\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nvar http = require(\"./httpshim\");\r\nvar HttpClientFactory = (function () {\r\n    function HttpClientFactory() {\r\n    }\r\n    HttpClientFactory.startsWith = function (str, word) {\r\n        return str.lastIndexOf(word, 0) === 0;\r\n    };\r\n    HttpClientFactory.NewHttpClient = function (url) {\r\n        if (HttpClientFactory.startsWith(url, \"https://\")) {\r\n            var host = url.substr(8);\r\n            return new http.HttpClient(\"https\", host);\r\n        }\r\n        if (HttpClientFactory.startsWith(url, \"http://\")) {\r\n            var host = url.substr(7);\r\n            return new http.HttpClient(\"http\", host);\r\n        }\r\n        throw \"Invalid url protocol: \" + url;\r\n    };\r\n    return HttpClientFactory;\r\n}());\r\nvar UrlBuilder = (function () {\r\n    function UrlBuilder(path) {\r\n        var _this = this;\r\n        this.toString = function () { return _this._url; };\r\n        this._url = path;\r\n    }\r\n    UrlBuilder.prototype.addQuery = function (key, value) {\r\n        if (value == null || value == undefined) {\r\n            return;\r\n        }\r\n        var q = this._url;\r\n        var del;\r\n        if (q.indexOf(\"?\") == -1) {\r\n            del = \"?\";\r\n        }\r\n        else {\r\n            del = \"&\";\r\n        }\r\n        this._url = q + del + key + \"=\" + encodeURIComponent(value.toString());\r\n    };\r\n    return UrlBuilder;\r\n}());\r\nexports.UrlBuilder = UrlBuilder;\r\nvar XClient = (function () {\r\n    function XClient() {\r\n    }\r\n    XClient.New = function (endpoint, authToken, gpsProvider) {\r\n        var httpClient = HttpClientFactory.NewHttpClient(endpoint);\r\n        var x = new XClient();\r\n        x._authToken = authToken;\r\n        x._httpClient = httpClient;\r\n        if (gpsProvider == undefined) {\r\n            gpsProvider = null;\r\n        }\r\n        x._gpsProvider = gpsProvider;\r\n        return x;\r\n    };\r\n    XClient.prototype.getAsync = function (relativePath) {\r\n        return this.sendAsync(\"GET\", relativePath);\r\n    };\r\n    XClient.prototype.deleteAsync = function (relativePath) {\r\n        return this.sendAsync(\"DELETE\", relativePath);\r\n    };\r\n    XClient.prototype.putAsync = function (relativePath, body) {\r\n        return this.sendAsync(\"PUT\", relativePath, body);\r\n    };\r\n    XClient.prototype.postAsync = function (relativePath, body) {\r\n        return this.sendAsync(\"POST\", relativePath, body);\r\n    };\r\n    XClient.prototype.patchAsync = function (relativePath, body) {\r\n        return this.sendAsync(\"POST\", relativePath, body);\r\n    };\r\n    XClient.prototype.sendAsync = function (method, relativePath, body) {\r\n        var _this = this;\r\n        if (body === void 0) { body = null; }\r\n        var url = relativePath.toString();\r\n        return new Promise(function (resolve, reject) {\r\n            var geo = null;\r\n            if (_this._gpsProvider != null) {\r\n                geo = _this._gpsProvider.getLoc();\r\n            }\r\n            _this._httpClient.sendAsync(method, url, body, \"Bearer \" + _this._authToken, geo, resolve, reject);\r\n        });\r\n    };\r\n    return XClient;\r\n}());\r\nexports.XClient = XClient;\r\n","import * as React from \"react\";\r\nimport * as ReactDOM from \"react-dom\";\r\n\r\nimport { Hello } from \"./components/Hello\";\r\n\r\nimport * as XC from 'trc-httpshim/xclient'\r\nimport * as common from 'trc-httpshim/common'\r\nimport * as core from 'trc-core/core'\r\nimport * as trcSheet from 'trc-sheet/sheet'\r\nimport { checkPropTypes } from \"prop-types\";\r\n\r\n\r\nimport { ColumnSelector } from \"./components/ColumnSelector\";\r\nimport { SheetContainer } from './components/SheetContainer'\r\n\r\nexport interface IMajorState {\r\n    //AuthToken: string;\r\n    SheetClient: trcSheet.SheetClient;\r\n    SheetId: string;\r\n\r\n    _info: trcSheet.ISheetInfoResult;\r\n    // Sheet Contents?  Sheet History? \r\n}\r\ndeclare var _trcGlobal : IMajorState;\r\n\r\n\r\n// Display the current sheet name \r\nexport class SheetName extends React.Component<{}, {}> {\r\n    render() {        \r\n            return <div>Major: {_trcGlobal._info.Name}</div>            \r\n    }\r\n}\r\n\r\n// \r\nexport class App extends React.Component<{},{\r\n    columnInfo : trcSheet.IColumnInfo\r\n}>\r\n{\r\n    public constructor(props : any) {\r\n        super(props);\r\n\r\n        this.state = { columnInfo : undefined };\r\n        this.renderBody = this.renderBody.bind(this);\r\n        this.handle = this.handle.bind(this);\r\n    }\r\n    // undefined in no topology \r\n    private getTopology() : string {\r\n        var x : any = _trcGlobal._info;\r\n        var y = x.Topology;\r\n        if (!y) { return undefined; }\r\n        return y.AutoCreateChildrenForColumnName;\r\n    }\r\n\r\n    private setOption(ci : trcSheet.IColumnInfo) : void {\r\n        this.setState(\r\n            {\r\n                columnInfo:  ci\r\n            }\r\n        );\r\n    }\r\n    private handle() {\r\n        alert(\"Activate: \" + this.state.columnInfo.Name);\r\n\r\n        // Call Long running op\r\n        // Disable for running\r\n\r\n        var x: any = window;\r\n        x.mainMajor.beginLoad();\r\n\r\n        setTimeout( ()=> {\r\n            x.mainMajor.check();\r\n        }, 3000);\r\n\r\n        /*\r\n        var adminClient = new trcSheet.SheetAdminClient(_trcGlobal.SheetClient);\r\n        adminClient.postOpRefreshAsync().then( ()=> {\r\n            // 202 polling finished. Sheet is updated. \r\n        });*/\r\n\r\n    }\r\n\r\n    renderTopology() {\r\n        return <div>\r\n            This sheet does not have a current topology. Please select a column to split by:\r\n<ColumnSelector  Include={ (ci) => ci.IsReadOnly && ci.Name != \"RecId\" }\r\nOnChange={(e) => this.setOption(e)} />\r\n\r\n            <button onClick={this.handle} disabled={!this.state.columnInfo}>Set Toplogy</button>\r\n        </div>\r\n    }\r\n    renderInput() {\r\n        return <div>\r\n            This sheet's current topology is to split by <b>{this.getTopology()}</b>.\r\n        </div> \r\n    }\r\n\r\n    // Called when the sheet has loaded. \r\n    renderBody() {\r\nreturn  <div> The current sheet is: <SheetName />\r\n        { this.getTopology() ? this.renderInput() : this.renderTopology() }    </div>\r\n    }\r\n\r\n\r\n    render() {\r\n        return <div>\r\n            <p>This plugin helps with topology.</p>\r\n            <SheetContainer onReady={this.renderBody}></SheetContainer>\r\n        </div> \r\n\r\n    };\r\n}\r\n\r\nReactDOM.render(\r\n    <div>\r\n        <App></App>\r\n    </div>,\r\n    document.getElementById(\"example\")\r\n);","module.exports = ReactDOM;","import * as React from \"react\";\r\nimport * as ReactDOM from \"react-dom\";\r\nimport * as trcSheet from 'trc-sheet/sheet'\r\n\r\n// $$$ Share this wiht main \r\nexport interface IMajorState {\r\n    //AuthToken: string;\r\n    SheetClient: trcSheet.SheetClient;\r\n    SheetId: string;\r\n\r\n    _info: trcSheet.ISheetInfoResult;\r\n    // Sheet Contents?  Sheet History? \r\n}\r\ndeclare var _trcGlobal : IMajorState;\r\n\r\n\r\n// Select a column name from the sheet. \r\nexport interface IColumnSelectorProps {\r\n    // Optional predicate to restrict which columns are included\r\n    Include? : (ci : trcSheet.IColumnInfo) => boolean; \r\n\r\n    OnChange : (ci : trcSheet.IColumnInfo) => void; // CAlled when a selection is made\r\n}\r\nexport class ColumnSelector extends React.Component<IColumnSelectorProps, {}> {\r\n    constructor(props : any) {\r\n        if (!props.Include ) {\r\n            props.Include= (ci : any) => true;\r\n        }\r\n        super(props);\r\n        this.state = { };    \r\n        this.handleChange = this.handleChange.bind(this);\r\n      }\r\n\r\n    private getValues() : string[] {\r\n        var cs = _trcGlobal._info.Columns;\r\n        return cs.map(c => this.props.Include(c) ? c.Name : null);\r\n    }\r\n\r\n    handleChange(event: any) {\r\n        var idx = event.target.value;\r\n        //alert(\"set: \" + idx);\r\n        // this.setState({value: event.target.value});\r\n        var ci = _trcGlobal._info.Columns[idx];\r\n        this.props.OnChange(ci);\r\n      }\r\n\r\n      \r\n\r\n    render() {     \r\n        // <option> must have a 'key' property for React.    \r\n         return <select onChange={this.handleChange}>\r\n             {this.getValues().map((name,idx) =>              \r\n             name ? \r\n             <option key={idx} value={idx}>{name}</option>\r\n             : null\r\n             )}\r\n         </select>   \r\n    }\r\n}\r\n","// Wraps accessing a Sheet's info, contents, history, etc. \r\n// Exposes sheet info  to child elements. \r\n\r\nimport * as React from \"react\";\r\nimport * as ReactDOM from \"react-dom\";\r\n\r\nimport * as XC from 'trc-httpshim/xclient'\r\nimport * as common from 'trc-httpshim/common'\r\nimport * as core from 'trc-core/core'\r\nimport * as trcSheet from 'trc-sheet/sheet'\r\n\r\n\r\n// https://www.leighhalliday.com/introducing-react-context-api\r\n// const AppContext = React.createContext( {});\r\n\r\n// Replace this with a react context? \r\ndeclare var _trcGlobal : IMajorState;\r\n\r\nexport interface IMajorProps { \r\n    // children? : any;\r\n    onReady : () => any; // render body when ready \r\n}\r\nexport interface IMajorState {\r\n    //AuthToken: string;\r\n    SheetClient: trcSheet.SheetClient;\r\n    SheetId: string;\r\n\r\n    _updating : boolean;\r\n\r\n    _info: trcSheet.ISheetInfoResult;\r\n    // Sheet Contents?  Sheet History? \r\n}\r\n\r\nexport class SheetContainer extends React.Component<IMajorProps, IMajorState> {\r\n\r\n    public constructor(props: any) {\r\n        super(props);\r\n\r\n        // Ordering:\r\n        // - DOM has an html element \r\n        // - <SheetContainer> is rendered to that element. This sets the global\r\n        // - Load complete.\r\n        // - PluginMain() is called (after the OnLoad event). This reads the global\r\n        //     to get <SheetContainer> and call setSheetRef();\r\n        var x: any = window;\r\n        x.mainMajor = this;\r\n    }\r\n    render() {\r\n        if (!this.state) {\r\n            return <div>Loading...</div>\r\n        } else {\r\n            if (this.state._updating) {\r\n                return <div>Updating... please wait ...</div> \r\n            }\r\n            if (!this.state._info) {\r\n                return <div>Major! Not yet loaded: {this.state.SheetId}</div>;\r\n            } else {\r\n                // return <div>Major: {this.state._info.Name}</div>\r\n                //return this.props.children;\r\n                return this.props.onReady();\r\n            }\r\n        }\r\n    }\r\n\r\n    // Signal control will begin loading. \r\n    public  beginLoad() : void {\r\n        this.setState({\r\n            _updating : true \r\n        });\r\n        // Will trigger a render. \r\n    }\r\n    \r\n    public check() : void {\r\n        this.setState({\r\n            _updating : false \r\n        });\r\n        /*\r\n        var adminClient = new trcSheet.SheetAdminClient(_trcGlobal.SheetClient);\r\n        adminClient.WaitAsync().then( ()=> {\r\n\r\n\r\n        }).catch( (err) => {\r\n\r\n        });*/\r\n    }\r\n    \r\n    // Called by PluginMain() once sheetId is available. \r\n    public setSheetRef(sheetRef: any): void {\r\n        var httpClient = XC.XClient.New(sheetRef.Server, sheetRef.AuthToken, undefined);\r\n        var sheetClient = new trcSheet.SheetClient(httpClient, sheetRef.SheetId);\r\n\r\n        // Make async network call...\r\n        this.setState({\r\n            SheetId: sheetRef.SheetId,\r\n            SheetClient: sheetClient\r\n        }, () => {\r\n            // State is updated \r\n            \r\n            this.state.SheetClient.getInfoAsync().then((info) => {                \r\n                _trcGlobal = {\r\n                    ...this.state,                    \r\n                };\r\n                _trcGlobal._info = info;\r\n                this.setState({ _info: info });\r\n            });\r\n        });\r\n    }\r\n}","\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nvar common = require(\"./common\");\r\nvar HttpClient = (function () {\r\n    function HttpClient(protocol, hostName) {\r\n        this._protocol = protocol;\r\n        this._hostname = hostName;\r\n    }\r\n    HttpClient.prototype.sendAsync = function (verb, path, body, authHeader, geo, onSuccess, onFailure) {\r\n        var _this = this;\r\n        var url;\r\n        if (path.indexOf(\"http\") == 0) {\r\n            url = path;\r\n        }\r\n        else {\r\n            url = this._protocol + \"://\" + this._hostname + path;\r\n        }\r\n        $.ajax({\r\n            url: url,\r\n            type: verb,\r\n            contentType: \"application/json\",\r\n            beforeSend: function (xhr) {\r\n                xhr.setRequestHeader('accept', 'application/json');\r\n                if (authHeader != null) {\r\n                    xhr.setRequestHeader(\"Authorization\", authHeader);\r\n                }\r\n                if (geo != null) {\r\n                    xhr.setRequestHeader(\"x-lat\", geo.Lat);\r\n                    xhr.setRequestHeader(\"x-long\", geo.Long);\r\n                }\r\n            },\r\n            data: (body == null) ? undefined : JSON.stringify(body),\r\n            success: function (data, textStatus, xhr) {\r\n                var status = xhr.status;\r\n                if (status == 202) {\r\n                    var loc = xhr.getResponseHeader('Location');\r\n                    if (!!loc) {\r\n                        setTimeout(function () {\r\n                            _this.sendAsync(\"GET\", loc, null, authHeader, geo, onSuccess, onFailure);\r\n                        }, 5 * 1000);\r\n                        return;\r\n                    }\r\n                }\r\n                onSuccess(data);\r\n            },\r\n            error: function (xhr, statusText, errorThrown) {\r\n                var obj = xhr.responseJSON;\r\n                if (!obj || !obj.Message) {\r\n                    var code = xhr.status;\r\n                    var msg = \"(\" + statusText + \") Error \" + code + \" from \" + verb + \" \" + url;\r\n                    onFailure(common.makeError(code, msg));\r\n                }\r\n                else {\r\n                    onFailure(obj);\r\n                }\r\n            }\r\n        });\r\n    };\r\n    return HttpClient;\r\n}());\r\nexports.HttpClient = HttpClient;\r\n","\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nvar MockGpsTracker = (function () {\r\n    function MockGpsTracker() {\r\n    }\r\n    MockGpsTracker.prototype.MockGpsTracker = function () {\r\n        this._geo = { Lat: 0, Long: 0 };\r\n    };\r\n    MockGpsTracker.prototype.getLoc = function () {\r\n        return this._geo;\r\n    };\r\n    MockGpsTracker.prototype.setLocation = function (geo) {\r\n        this._geo = geo;\r\n    };\r\n    return MockGpsTracker;\r\n}());\r\nexports.MockGpsTracker = MockGpsTracker;\r\nfunction makeError(code, message) {\r\n    return {\r\n        Code: code,\r\n        Message: (message == undefined) ? null : message,\r\n        InternalDetails: null,\r\n        CorrelationId: null\r\n    };\r\n}\r\nexports.makeError = makeError;\r\n","\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nvar core = require(\"trc-core/core\");\r\nvar XC = require(\"trc-httpshim/xclient\");\r\nvar sheetContents_1 = require(\"./sheetContents\");\r\nvar Validators = (function () {\r\n    function Validators() {\r\n    }\r\n    Validators.ValidateColumnName = function (name) {\r\n        if (name == null) {\r\n            throw 'Column Name is missing';\r\n        }\r\n        if (!Validators._columnNameRegex.test(name)) {\r\n            throw 'Column Name is not valid: ' + name;\r\n        }\r\n    };\r\n    Validators.ValidateHelper = function (columnName, description, possibleValues) {\r\n        Validators.ValidateColumnName(columnName);\r\n        if (description != null) {\r\n            if (description.length > 400) {\r\n                throw \"Description is too long for '\" + columnName + \"'\";\r\n            }\r\n        }\r\n        if (possibleValues != null) {\r\n            if (possibleValues.length > 15) {\r\n                throw \"Too many possible values in question '\" + columnName + \"'\";\r\n            }\r\n            for (var k in possibleValues) {\r\n                var item = possibleValues[k];\r\n                if (!item) {\r\n                    throw \"possible values can't be null in question '\" + columnName + \"'\";\r\n                }\r\n                if (item.length > 50) {\r\n                    throw \"Possible value is too long for '\" + columnName + \"'\";\r\n                }\r\n            }\r\n        }\r\n    };\r\n    Validators.ValidateColumnInfo = function (info) {\r\n        Validators.ValidateHelper(info.Name, info.Description, info.PossibleValues);\r\n        if (!!info.Expression && !!info.Semantic) {\r\n            throw \"Can't send both Expression and Semantic properties on a column: '\" + info.Name + \"'.\";\r\n        }\r\n        if (!!info.Expression && !info.IsReadOnly) {\r\n            throw \"Expression columns must be read-only: '\" + info.Name + \"'.\";\r\n        }\r\n    };\r\n    Validators.ValidateAddColumn = function (payload) {\r\n        Validators.ValidateHelper(payload.ColumnName, payload.Description, payload.PossibleValues);\r\n    };\r\n    Validators._columnNameRegex = new RegExp(\"^[a-zA-Z0-9_]+$\");\r\n    return Validators;\r\n}());\r\nexports.Validators = Validators;\r\nexports.PolygonKind = \"_polygon\";\r\nvar NextLinkEnumerable = (function () {\r\n    function NextLinkEnumerable(firstSegment, http) {\r\n        this._firstSegment = firstSegment;\r\n        this._http = http;\r\n    }\r\n    NextLinkEnumerable.prototype.ForEach = function (handler) {\r\n        var _this = this;\r\n        return new Promise(function (resolve, reject) {\r\n            var worker = function (de) {\r\n                var results = de.Results;\r\n                if (results != null) {\r\n                    for (var i in results) {\r\n                        var item = results[i];\r\n                        try {\r\n                            handler(item);\r\n                        }\r\n                        catch (e) {\r\n                            reject(e);\r\n                        }\r\n                    }\r\n                }\r\n                if (de.NextLink != null) {\r\n                    _this._http.getAsync(de.NextLink).then(function (segment) {\r\n                        worker(segment);\r\n                    }).catch(function (error) { return reject(error); });\r\n                }\r\n                else {\r\n                    resolve();\r\n                }\r\n            };\r\n            worker(_this._firstSegment);\r\n        });\r\n    };\r\n    return NextLinkEnumerable;\r\n}());\r\nvar SheetClient = (function () {\r\n    function SheetClient(http, sheetId) {\r\n        this._http = http;\r\n        this._sheetId = sheetId;\r\n    }\r\n    SheetClient.prototype.getId = function () {\r\n        return this._sheetId;\r\n    };\r\n    SheetClient.prototype.getSheetById = function (idChild) {\r\n        return new SheetClient(this._http, idChild);\r\n    };\r\n    SheetClient.prototype.getUrlBase = function (path) {\r\n        if (path === void 0) { path = \"\"; }\r\n        var url = new XC.UrlBuilder(\"/sheets/\" + this._sheetId + path);\r\n        return url;\r\n    };\r\n    SheetClient.prototype.getInfoAsync = function () {\r\n        var url = this.getUrlBase(\"/info\");\r\n        return this._http.getAsync(url);\r\n    };\r\n    SheetClient.prototype.getSheetContentsAsync = function (whereExpression, selectColumns, version) {\r\n        var url = this.getUrlBase();\r\n        url.addQuery(\"filter\", whereExpression);\r\n        if (selectColumns != null && selectColumns != undefined) {\r\n            url.addQuery(\"select\", selectColumns.join());\r\n        }\r\n        url.addQuery(\"version\", version);\r\n        return this._http.getAsync(url);\r\n    };\r\n    SheetClient.prototype.getRecIdsAsync = function () {\r\n        var selectColumns = [sheetContents_1.ColumnNames.RecId];\r\n        return this.getSheetContentsAsync(null, selectColumns).then(function (contents) {\r\n            return contents[sheetContents_1.ColumnNames.RecId];\r\n        });\r\n    };\r\n    SheetClient.prototype.postUpdateSingleRowAsync = function (recId, columnNames, newValues) {\r\n        var body = sheetContents_1.SheetContents.FromRow(recId, columnNames, newValues);\r\n        return this.postUpdateAsync(body);\r\n    };\r\n    SheetClient.prototype.postUpdateSingleCellAsync = function (recId, columnName, newValue) {\r\n        var body = sheetContents_1.SheetContents.FromSingleCell(recId, columnName, newValue);\r\n        return this.postUpdateAsync(body);\r\n    };\r\n    SheetClient.prototype.postUpdateAsync = function (values) {\r\n        var url = this.getUrlBase();\r\n        return this._http.sendAsync(\"POST\", url, values);\r\n    };\r\n    SheetClient.prototype.getDeltaRangeAsync = function (startVersion, endVersion) {\r\n        var _this = this;\r\n        var uri = this.getUrlBase(\"/deltas\");\r\n        uri.addQuery(\"start\", startVersion);\r\n        uri.addQuery(\"end\", endVersion);\r\n        return this._http.getAsync(uri).then(function (segment) {\r\n            return new NextLinkEnumerable(segment, _this._http);\r\n        });\r\n    };\r\n    SheetClient.prototype.getDeltaAsync = function (version) {\r\n        var uri = this.getUrlBase(\"/history/\" + version);\r\n        return this._http.getAsync(uri);\r\n    };\r\n    SheetClient.prototype.findVersionAsync = function (timestamp) {\r\n        var uri = this.getUrlBase(\"/history/find?timestamp=\" + timestamp.toISOString());\r\n        return this._http.getAsync(uri).\r\n            then(function (result) { return result.VersionNumber; });\r\n    };\r\n    SheetClient.prototype.getRebaseLogAsync = function () {\r\n        var _this = this;\r\n        var uri = this.getUrlBase(\"/history/rebase\");\r\n        return this._http.getAsync(uri).\r\n            then(function (segment) { return new NextLinkEnumerable(segment, _this._http); });\r\n    };\r\n    SheetClient.prototype.getChildrenAsync = function () {\r\n        var uri = this.getUrlBase(\"/child\");\r\n        return this._http.getAsync(uri).\r\n            then(function (result) { return result.ChildrenIds; });\r\n    };\r\n    SheetClient.prototype.createChildSheet = function (body) {\r\n        var _this = this;\r\n        var uri = this.getUrlBase(\"/child\");\r\n        return this._http.postAsync(uri, body).\r\n            then(function (result) { return _this.getSheetById(result.Id); });\r\n    };\r\n    SheetClient.prototype.createChildSheetFromFilterAsync = function (name, whereExpression, sharesSandbox) {\r\n        var body = {\r\n            Name: name,\r\n            Filter: {\r\n                WhereExpression: whereExpression\r\n            },\r\n            RecIds: null,\r\n            ShareSandbox: sharesSandbox,\r\n        };\r\n        return this.createChildSheet(body);\r\n    };\r\n    SheetClient.prototype.deleteChildSheetAsync = function (childSheetId) {\r\n        var uri = this.getUrlBase(\"/child/\" + childSheetId);\r\n        return this._http.deleteAsync(uri);\r\n    };\r\n    SheetClient.prototype.postCustomDataAsync = function (kind, dataId, body) {\r\n        var url = this.getUrlBase(\"/data/\" + kind + \"/\" + dataId);\r\n        return this._http.sendAsync(\"POST\", url, body);\r\n    };\r\n    SheetClient.prototype.getCustomDataAsync = function (kind, dataId) {\r\n        var url = this.getUrlBase(\"/data/\" + kind + \"/\" + dataId);\r\n        return this._http.getAsync(url);\r\n    };\r\n    SheetClient.prototype.deleteCustomDataAsync = function (kind, dataId) {\r\n        var url = this.getUrlBase(\"/data/\" + kind + \"/\" + dataId);\r\n        return this._http.deleteAsync(url);\r\n    };\r\n    SheetClient.prototype.listCustomDataAsync = function (kind) {\r\n        var url = this.getUrlBase(\"/data/\" + kind);\r\n        return this._http.getAsync(url).then(function (list) {\r\n            return new core.ArrayEnumerable(list.Entries);\r\n        });\r\n    };\r\n    return SheetClient;\r\n}());\r\nexports.SheetClient = SheetClient;\r\nvar SheetAdminClient = (function () {\r\n    function SheetAdminClient(sheetClient) {\r\n        this._client = sheetClient;\r\n    }\r\n    SheetAdminClient.prototype.postNewExpressionAsync = function (name, expression) {\r\n        try {\r\n            Validators.ValidateColumnName(name);\r\n            var body = {\r\n                Name: name,\r\n                IsReadOnly: true,\r\n                Expression: expression\r\n            };\r\n            var uri = this._client.getUrlBase(\"/columns/\" + name);\r\n            return this._client._http.postAsync(uri, body);\r\n        }\r\n        catch (error) {\r\n            return Promise.reject(error);\r\n        }\r\n    };\r\n    SheetAdminClient.prototype.getOpStatusAsync = function () {\r\n        var uri = this._client.getUrlBase(\"/ops\");\r\n        return this._client._http.getAsync(uri);\r\n    };\r\n    SheetAdminClient.prototype.postOpAsync = function (kind, payload) {\r\n        var body = {\r\n            SheetId: this._client._sheetId,\r\n            Kind: kind,\r\n            Cookie: null,\r\n            Payload: payload\r\n        };\r\n        var uri = this._client.getUrlBase(\"/ops\");\r\n        return this._client._http.putAsync(uri, body);\r\n    };\r\n    SheetAdminClient.prototype.postOpRefreshAsync = function () {\r\n        var payload = {};\r\n        return this.postOpAsync(\"RefreshContents\", payload);\r\n    };\r\n    SheetAdminClient.prototype.postOpCreateOrUpdateColumnsAsync = function (columns) {\r\n        var payload = {\r\n            Infos: columns\r\n        };\r\n        try {\r\n            columns.forEach(function (item) { return Validators.ValidateColumnInfo(item); });\r\n        }\r\n        catch (error) {\r\n            return Promise.reject(error);\r\n        }\r\n        return this.postOpAsync(\"AddColumns\", payload);\r\n    };\r\n    SheetAdminClient.prototype.postOpAddQuestionAsync = function (questions) {\r\n        var payload = {\r\n            Columns: questions\r\n        };\r\n        try {\r\n            for (var i in questions) {\r\n                var item = questions[i];\r\n                Validators.ValidateAddColumn(item);\r\n            }\r\n        }\r\n        catch (error) {\r\n            return Promise.reject(error);\r\n        }\r\n        return this.postOpAsync(\"AddColumns\", payload);\r\n    };\r\n    SheetAdminClient.prototype.postOpDeleteQuestionAsync = function (columnName) {\r\n        var payload = {\r\n            ColumnName: columnName\r\n        };\r\n        return this.postOpAsync(\"DeleteColumn\", payload);\r\n    };\r\n    SheetAdminClient.prototype.WaitAsync = function () {\r\n        var _this = this;\r\n        return new Promise(function (resolve, reject) {\r\n            _this.waitHelper(resolve, reject);\r\n        });\r\n    };\r\n    SheetAdminClient.prototype.waitHelper = function (resolve, reject) {\r\n        var _this = this;\r\n        this.getOpStatusAsync().then(function (value) {\r\n            if (value.CurrentOp == null) {\r\n                resolve();\r\n                return;\r\n            }\r\n            setTimeout(function () {\r\n                _this.waitHelper(resolve, reject);\r\n            }, 5 * 1000);\r\n        }).catch(function (err) { return reject(err); });\r\n    };\r\n    return SheetAdminClient;\r\n}());\r\nexports.SheetAdminClient = SheetAdminClient;\r\n","\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nvar ArrayEnumerable = (function () {\r\n    function ArrayEnumerable(items) {\r\n        this._items = items;\r\n    }\r\n    ArrayEnumerable.prototype.ForEach = function (handler) {\r\n        try {\r\n            if (this._items != null) {\r\n                for (var i in this._items) {\r\n                    var item = this._items[i];\r\n                    handler(item);\r\n                }\r\n            }\r\n            return Promise.resolve();\r\n        }\r\n        catch (e) {\r\n            return Promise.reject(e);\r\n        }\r\n    };\r\n    return ArrayEnumerable;\r\n}());\r\nexports.ArrayEnumerable = ArrayEnumerable;\r\nvar UserClient = (function () {\r\n    function UserClient(http) {\r\n        this._http = http;\r\n    }\r\n    UserClient.prototype.getUserInfoAsync = function (userId) {\r\n        if (!userId) {\r\n            return this._http.getAsync(\"/me\");\r\n        }\r\n        else {\r\n            return this._http.getAsync(\"/user/\" + userId);\r\n        }\r\n    };\r\n    UserClient.prototype.getActivityFeedAsync = function () {\r\n        return this._http.getAsync(\"/me/feed/rss\");\r\n    };\r\n    return UserClient;\r\n}());\r\nexports.UserClient = UserClient;\r\n","\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nvar ColumnNames = (function () {\r\n    function ColumnNames() {\r\n    }\r\n    ColumnNames.RecId = \"RecId\";\r\n    ColumnNames.FirstName = \"FirstName\";\r\n    ColumnNames.LastName = \"LastName\";\r\n    ColumnNames.Party = \"Party\";\r\n    ColumnNames.Address = \"Address\";\r\n    ColumnNames.City = \"City\";\r\n    ColumnNames.Zip = \"Zip\";\r\n    ColumnNames.Lat = \"Lat\";\r\n    ColumnNames.Long = \"Long\";\r\n    ColumnNames.XVoted = \"XVoted\";\r\n    ColumnNames.XTargetPri = \"XTargetPri\";\r\n    ColumnNames.PrecinctName = \"PrecinctName\";\r\n    ColumnNames.Cellphone = \"Cellphone\";\r\n    ColumnNames.HHID = \"HHID\";\r\n    ColumnNames.XUser = \"XUser\";\r\n    ColumnNames.XApp = \"XApp\";\r\n    ColumnNames.XLat = \"XLat\";\r\n    ColumnNames.XLong = \"XLong\";\r\n    ColumnNames.XLastModified = \"XLastModified\";\r\n    ColumnNames.XIPAddress = \"XIPAddress\";\r\n    return ColumnNames;\r\n}());\r\nexports.ColumnNames = ColumnNames;\r\nvar SheetContentsIndex = (function () {\r\n    function SheetContentsIndex(source) {\r\n        this._map = {};\r\n        this._source = source;\r\n        var cRecId = source[\"RecId\"];\r\n        for (var i = 0; i < cRecId.length; i++) {\r\n            var recId = cRecId[i];\r\n            this._map[recId] = i;\r\n        }\r\n    }\r\n    SheetContentsIndex.prototype.lookupRecId = function (recId) {\r\n        var idx = this._map[recId];\r\n        if (idx == undefined) {\r\n            return -1;\r\n        }\r\n        return idx;\r\n    };\r\n    SheetContentsIndex.prototype.set = function (recId, columnName, newValue) {\r\n        var idx = this.lookupRecId(recId);\r\n        if (idx != -1) {\r\n            this._source[columnName][idx] = newValue;\r\n        }\r\n    };\r\n    SheetContentsIndex.prototype.getContents = function () {\r\n        return this._source;\r\n    };\r\n    return SheetContentsIndex;\r\n}());\r\nexports.SheetContentsIndex = SheetContentsIndex;\r\nvar SheetContents = (function () {\r\n    function SheetContents() {\r\n    }\r\n    SheetContents.getSheetContentsIndex = function (source) {\r\n        return new SheetContentsIndex(source);\r\n    };\r\n    SheetContents.toCsv = function (data) {\r\n        var colKeys = Object.keys(data);\r\n        var grid = [];\r\n        var rowCount = data[colKeys[0]].length;\r\n        var index = 0;\r\n        grid.push(colKeys);\r\n        while (index < rowCount) {\r\n            var row = [];\r\n            for (var _i = 0, colKeys_1 = colKeys; _i < colKeys_1.length; _i++) {\r\n                var colKey = colKeys_1[_i];\r\n                var direct = data[colKey][index];\r\n                var val;\r\n                if (direct == null || direct == undefined) {\r\n                    val = \"\";\r\n                }\r\n                else {\r\n                    val = direct.toString();\r\n                    try {\r\n                        val = val.replace(\"\\\"\", \"'\");\r\n                        if (val.indexOf(\",\") >= 0) {\r\n                            val = \"\\\"\" + val + \"\\\"\";\r\n                        }\r\n                    }\r\n                    catch (e) {\r\n                        val = \"???\";\r\n                    }\r\n                }\r\n                row.push(val);\r\n            }\r\n            grid.push(row);\r\n            index++;\r\n        }\r\n        var content = \"\";\r\n        grid.forEach(function (arr, index) {\r\n            var row = arr.join(\",\");\r\n            content += index < grid.length ? row + \"\\r\\n\" : row;\r\n        });\r\n        return content;\r\n    };\r\n    SheetContents.ForEach = function (source, callback) {\r\n        var colRecId = source[ColumnNames.RecId];\r\n        for (var columnName in source) {\r\n            var column = source[columnName];\r\n            if (column == colRecId) {\r\n                continue;\r\n            }\r\n            for (var i = 0; i < column.length; i++) {\r\n                var recId = colRecId[i];\r\n                var newValue = column[i];\r\n                callback(recId, columnName, newValue);\r\n            }\r\n        }\r\n    };\r\n    SheetContents.FromSingleCell = function (recId, columnName, newValue) {\r\n        var body = {};\r\n        body[ColumnNames.RecId] = [recId];\r\n        body[columnName] = [newValue];\r\n        return body;\r\n    };\r\n    SheetContents.FromRow = function (recId, columnNames, newValues) {\r\n        if (columnNames.length != newValues.length) {\r\n            throw \"length mismatch\";\r\n        }\r\n        var body = {};\r\n        body[ColumnNames.RecId] = [recId];\r\n        for (var i = 0; i < columnNames.length; i++) {\r\n            var columnName = columnNames[i];\r\n            var newValue = newValues[i];\r\n            body[columnName] = [newValue];\r\n        }\r\n        return body;\r\n    };\r\n    SheetContents.KeepRows = function (source, fpInclude) {\r\n        var columnNames = [];\r\n        var results = {};\r\n        var len = -1;\r\n        for (var columnName in source) {\r\n            if (len == -1) {\r\n                len = source[columnName].length;\r\n            }\r\n            columnNames.push(columnName);\r\n            results[columnName] = [];\r\n        }\r\n        for (var iRow = 0; iRow < len; iRow++) {\r\n            var keepRow = fpInclude(iRow);\r\n            if (keepRow) {\r\n                for (var x in columnNames) {\r\n                    var columnName = columnNames[x];\r\n                    var val = source[columnName][iRow];\r\n                    results[columnName].push(val);\r\n                }\r\n            }\r\n        }\r\n        return results;\r\n    };\r\n    SheetContents.TakeN = function (sheet, topN) {\r\n        var sheet2 = {};\r\n        for (var key in sheet) {\r\n            var value = sheet[key];\r\n            sheet2[key] = value.slice(0, topN);\r\n        }\r\n        return sheet2;\r\n    };\r\n    SheetContents.AddTimestamp = function (source, gps) {\r\n        if (gps === void 0) { gps = null; }\r\n        var curTime = new Date().toISOString();\r\n        var cs = [];\r\n        var vs = [];\r\n        cs.push(ColumnNames.XLastModified);\r\n        vs.push(curTime);\r\n        if (!!gps) {\r\n            var loc = gps.getLoc();\r\n            cs.push(ColumnNames.XLat);\r\n            cs.push(ColumnNames.XLong);\r\n            vs.push(loc.Lat.toString());\r\n            vs.push(loc.Long.toString());\r\n        }\r\n        return SheetContents.Append(source, cs, vs);\r\n    };\r\n    SheetContents.Append = function (source, newColumns, newValues) {\r\n        var results = {};\r\n        var numRows = -1;\r\n        for (var columnName in source) {\r\n            if (numRows == -1) {\r\n                numRows = source[columnName].length;\r\n            }\r\n            results[columnName] = [];\r\n        }\r\n        for (var i in newColumns) {\r\n            var columnName = newColumns[i];\r\n            results[columnName] = [];\r\n        }\r\n        for (var iRow = 0; iRow < numRows; iRow++) {\r\n            for (var columnName in source) {\r\n                var val = source[columnName][iRow];\r\n                results[columnName].push(val);\r\n            }\r\n            for (var i in newColumns) {\r\n                var columnName = newColumns[i];\r\n                var val = newValues[i];\r\n                results[columnName].push(val);\r\n            }\r\n        }\r\n        return results;\r\n    };\r\n    return SheetContents;\r\n}());\r\nexports.SheetContents = SheetContents;\r\n"],"sourceRoot":""}